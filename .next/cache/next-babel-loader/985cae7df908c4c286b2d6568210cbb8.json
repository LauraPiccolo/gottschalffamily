{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js\";\n\nconst EventToolBar = ({\n  media,\n  setMedia,\n  lang\n}) => {\n  const modes = {\n    en: ['read', 'watch', 'listen', 'feedback', 'surprise'],\n    ar: ['اقرأ', 'راقب', 'استمع', 'ردود الفعل', 'مفاجأة'],\n    de: [\"Lesen\", \"Schauen\", \"Hören\", \"Feedback\", \"Zufällig\"]\n  };\n\n  const changeMedia = mode => {\n    setMedia(mode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event__toolbar\",\n    children: modes[lang].map((mode, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `event__toolbar__button${media === modes.en[index] ? ' event__toolbar__button--selected' : ''}`,\n      onClick: () => changeMedia(modes.en[index]),\n      children: index === 5 ? 'Random' : mode\n    }, mode, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\nexport default EventToolBar;","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js"],"names":["EventToolBar","media","setMedia","lang","modes","en","ar","de","changeMedia","mode","map","index"],"mappings":";;;AAAA,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAEhD,QAAMC,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,EAAyB,UAAzB,EAAoC,UAApC,CADQ;AAEZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EACJ,MADI,EAEJ,OAFI,EAGJ,YAHI,EAIJ,QAJI,CAFQ;AAQZC,IAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,UAA9B,EAA0C,UAA1C;AARQ,GAAd;;AAWA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5BP,IAAAA,QAAQ,CAACO,IAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAEQL,KAAK,CAACD,IAAD,CAAL,CAAYO,GAAZ,CAAgB,CAACD,IAAD,EAAOE,KAAP,kBACd;AAAQ,MAAA,SAAS,EAAG,yBAAwBV,KAAK,KAAKG,KAAK,CAACC,EAAN,CAASM,KAAT,CAAV,GAA4B,mCAA5B,GAAgE,EAAG,EAA/G;AAAkH,MAAA,OAAO,EAAE,MAAMH,WAAW,CAACJ,KAAK,CAACC,EAAN,CAASM,KAAT,CAAD,CAA5I;AAAA,gBAA2KA,KAAK,KAAK,CAAV,GAAc,QAAd,GAAyBF;AAApM,OAAoKA,IAApK;AAAA;AAAA;AAAA;AAAA,YADF;AAFR;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BH;;AA4BE,eAAeT,YAAf","sourcesContent":["const EventToolBar = ({ media, setMedia, lang }) => {\n\n    const modes = {\n      en: ['read','watch','listen','feedback','surprise'],\n      ar: ['اقرأ',\n      'راقب',\n      'استمع',\n      'ردود الفعل',\n      'مفاجأة'\n      ],\n      de: [\"Lesen\", \"Schauen\", \"Hören\", \"Feedback\", \"Zufällig\"]\n    }\n\n    const changeMedia = (mode) => {\n      setMedia(mode);\n    }\n\n    return (\n      <div className=\"event__toolbar\">\n          {\n              modes[lang].map((mode, index) => (\n                <button className={`event__toolbar__button${media === modes.en[index] ? ' event__toolbar__button--selected':''}`} onClick={() => changeMedia(modes.en[index])} key={mode}>{index === 5 ? 'Random' : mode}</button>\n              ))\n          }\n      </div>\n    );\n  };\n  \n  export default EventToolBar;\n  "]},"metadata":{},"sourceType":"module"}