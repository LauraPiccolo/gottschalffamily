{"ast":null,"code":"import _regeneratorRuntime from \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction fetchAPI(_x) {\n  return _fetchAPI.apply(this, arguments);\n} // Frontpage\n\n\nfunction _fetchAPI() {\n  _fetchAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var _ref,\n        variables,\n        preview,\n        folder,\n        res,\n        json,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, variables = _ref.variables, preview = _ref.preview, folder = _ref.folder;\n            _context.next = 3;\n            return fetch('https://gapi.storyblok.com/v1/api', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Token: 'aYu5zqsg2dHE3YmFmsDgFAtt',\n                Version: preview ? 'draft' : 'published',\n                starts_with: folder ? folder : '/'\n              },\n              body: JSON.stringify({\n                query: query,\n                variables: variables\n              })\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            json = _context.sent;\n\n            if (!json.errors) {\n              _context.next = 10;\n              break;\n            }\n\n            console.error(json.errors);\n            throw new Error('Failed to fetch API');\n\n          case 10:\n            return _context.abrupt(\"return\", json.data);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchAPI.apply(this, arguments);\n}\n\nexport function getHome() {\n  return _getHome.apply(this, arguments);\n}\n\nfunction _getHome() {\n  _getHome = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchAPI(\"\\n  {\\n    HomeItem(id: \\\"home\\\") {\\n        id\\n        name\\n        content {\\n            Title\\n            Subtitle\\n            Introduction_video {\\n              filename\\n            }\\n            Storylink {\\n              url\\n            }\\n            Wo_ar\\n            Wo_de\\n            Wo_en\\n            Was_ar\\n            Was_de\\n            Was_en\\n            Wer_ar\\n            Wer_de\\n            Wer_en\\n            Wie_ar\\n            Wie_de\\n            Wie_en\\n            Warum_ar\\n            Warum_de\\n            Warum_en\\n            Impressum\\n        }\\n    }\\n  }     \\n  \", {\n              preview: true\n            });\n\n          case 2:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.HomeItem.content);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getHome.apply(this, arguments);\n}\n\nexport function getThemes(_x2) {\n  return _getThemes.apply(this, arguments);\n}\n\nfunction _getThemes() {\n  _getThemes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(path) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchAPI(\"\\n  {\\n      ThemeItems {\\n        items {\\n          content {\\n              Title\\n              Description\\n              Timing\\n              events \\n          }\\n        }\\n      }\\n    } \\n  \", {\n              preview: true\n            });\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.ThemeItems.items);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getThemes.apply(this, arguments);\n}\n\nexport function getEvent(_x3) {\n  return _getEvent.apply(this, arguments);\n}\n\nfunction _getEvent() {\n  _getEvent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetchAPI(\"\\n  {\\n      ThemeItems {\\n        items {\\n          content {\\n              Title\\n              Description\\n              Timing\\n              events \\n          }\\n        }\\n      }\\n    } \\n  \", {\n              preview: true\n            });\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.ThemeItems.items);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getEvent.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/lib/api.js"],"names":["fetchAPI","query","variables","preview","folder","fetch","method","headers","Token","Version","starts_with","body","JSON","stringify","res","json","errors","console","error","Error","data","getHome","HomeItem","content","getThemes","path","ThemeItems","items","getEvent"],"mappings":";;;SAAeA,Q;;EAuBf;;;;uEAvBA,iBAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2EAAgE,EAAhE,EAAiCC,SAAjC,QAAiCA,SAAjC,EAA4CC,OAA5C,QAA4CA,OAA5C,EAAqDC,MAArD,QAAqDA,MAArD;AAAA;AAAA,mBACoBC,KAAK,CAAC,mCAAD,EAAsC;AACzDC,cAAAA,MAAM,EAAE,MADiD;AAEzDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAELC,gBAAAA,KAAK,EAAE,0BAFF;AAGLC,gBAAAA,OAAO,EAAEN,OAAO,GAAG,OAAH,GAAa,WAHxB;AAILO,gBAAAA,WAAW,EAAEN,MAAM,GAAGA,MAAH,GAAY;AAJ1B,eAFgD;AAQzDO,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBZ,gBAAAA,KAAK,EAALA,KADiB;AAEjBC,gBAAAA,SAAS,EAATA;AAFiB,eAAf;AARmD,aAAtC,CADzB;;AAAA;AACQY,YAAAA,GADR;AAAA;AAAA,mBAeqBA,GAAG,CAACC,IAAJ,EAfrB;;AAAA;AAeQA,YAAAA,IAfR;;AAAA,iBAgBMA,IAAI,CAACC,MAhBX;AAAA;AAAA;AAAA;;AAiBMC,YAAAA,OAAO,CAACC,KAAR,CAAcH,IAAI,CAACC,MAAnB;AAjBN,kBAkBY,IAAIG,KAAJ,CAAU,qBAAV,CAlBZ;;AAAA;AAAA,6CAoBSJ,IAAI,CAACK,IApBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAwBA,gBAAsBC,OAAtB;AAAA;AAAA;;;sEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcrB,QAAQ,wmBAkC3B;AACIG,cAAAA,OAAO,EAAE;AADb,aAlC2B,CADtB;;AAAA;AACCiB,YAAAA,IADD;AAAA,8CAuCEA,IAvCF,aAuCEA,IAvCF,uBAuCEA,IAAI,CAAEE,QAAN,CAAeC,OAvCjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA0CP,gBAAsBC,SAAtB;AAAA;AAAA;;;wEAAO,kBAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACczB,QAAQ,8MAc3B;AACIG,cAAAA,OAAO,EAAE;AADb,aAd2B,CADtB;;AAAA;AACCiB,YAAAA,IADD;AAAA,8CAmBEA,IAnBF,aAmBEA,IAnBF,uBAmBEA,IAAI,CAAEM,UAAN,CAAiBC,KAnBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO,kBAAwBH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACczB,QAAQ,8MAc3B;AACIG,cAAAA,OAAO,EAAE;AADb,aAd2B,CADtB;;AAAA;AACCiB,YAAAA,IADD;AAAA,8CAmBEA,IAnBF,aAmBEA,IAnBF,uBAmBEA,IAAI,CAAEM,UAAN,CAAiBC,KAnBnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["async function fetchAPI(query, { variables, preview, folder } = {}) {\n  const res = await fetch('https://gapi.storyblok.com/v1/api', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n          Token: 'aYu5zqsg2dHE3YmFmsDgFAtt',\n          Version: preview ? 'draft' : 'published',\n          starts_with: folder ? folder : '/',\n      },\n      body: JSON.stringify({\n          query,\n          variables,\n      }),\n  })\n\n  const json = await res.json()\n  if (json.errors) {\n      console.error(json.errors)\n      throw new Error('Failed to fetch API')\n  }\n  return json.data\n}\n\n// Frontpage\nexport async function getHome() {\n  const data = await fetchAPI(`\n  {\n    HomeItem(id: \"home\") {\n        id\n        name\n        content {\n            Title\n            Subtitle\n            Introduction_video {\n              filename\n            }\n            Storylink {\n              url\n            }\n            Wo_ar\n            Wo_de\n            Wo_en\n            Was_ar\n            Was_de\n            Was_en\n            Wer_ar\n            Wer_de\n            Wer_en\n            Wie_ar\n            Wie_de\n            Wie_en\n            Warum_ar\n            Warum_de\n            Warum_en\n            Impressum\n        }\n    }\n  }     \n  `,\n  {\n      preview: true\n  }\n  )\n  return data?.HomeItem.content\n}\n\nexport async function getThemes(path) {\n  const data = await fetchAPI(`\n  {\n      ThemeItems {\n        items {\n          content {\n              Title\n              Description\n              Timing\n              events \n          }\n        }\n      }\n    } \n  `,\n  {\n      preview: true,\n  }\n  )\n  return data?.ThemeItems.items\n}\n  \nexport async function getEvent(path) {\n  const data = await fetchAPI(`\n  {\n      ThemeItems {\n        items {\n          content {\n              Title\n              Description\n              Timing\n              events \n          }\n        }\n      }\n    } \n  `,\n  {\n      preview: true,\n  }\n  )\n  return data?.ThemeItems.items;\n}\n  "]},"metadata":{},"sourceType":"module"}