{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar';\nimport StoryRead from '../../components/Event/StoryRead';\nimport StoryWatch from '../../components/Event/StoryWatch';\nimport StoryListen from '../../components/Event/StoryListen';\nimport EventFeedback from '../../components/Event/EventFeedback';\nexport var __N_SSP = true;\nexport default function event(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fetchedContent = _ref.fetchedContent,\n      lang = _ref.lang;\n  var router = useRouter();\n\n  var _useState = useState(router.query.event),\n      location = _useState[0],\n      setLocation = _useState[1];\n\n  var _useState2 = useState('read'),\n      media = _useState2[0],\n      setMedia = _useState2[1];\n\n  var place = location.split('-')[0];\n  var theme = location.split('-')[1];\n  var stories = [1, 2, 3];\n  var modes = ['read', 'watch', 'listen', 'feedback', 'surprise'];\n  useEffect(function () {\n    if (media === \"surprise\") {\n      var randomNumber = Math.round(Math.random() * 3);\n      setMedia(modes[randomNumber]);\n    }\n  }, [media]);\n  var eventInfo = fetchedContent;\n  console.log(lang);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__theme\",\n          children: theme.charAt(0).toUpperCase() + theme.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__dateplace\",\n          children: [place.charAt(0).toUpperCase() + place.slice(1), \" \\u2014 \", eventInfo.date.replace(' 00:00', '').replace(/-/g, '.')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n        media: media,\n        setMedia: setMedia,\n        lang: lang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), media !== 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__stories\",\n        children: stories.map(function (index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event__stories__single\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"event__stories__single__title\",\n              children: eventInfo[\"Title\".concat(index)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event__stories__single__content\",\n              children: [media === 'read' && /*#__PURE__*/_jsxDEV(StoryRead, {\n                text: eventInfo[\"Text\".concat(index)],\n                photo: eventInfo[\"Photo\".concat(index)].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 43\n              }, _this), media === 'watch' && /*#__PURE__*/_jsxDEV(StoryWatch, {\n                video: eventInfo[\"Video\".concat(index)].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 44\n              }, _this), media === 'listen' && /*#__PURE__*/_jsxDEV(StoryListen, {\n                audio: eventInfo[\"Audio\".concat(index)].filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 45\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), media === 'feedback' && /*#__PURE__*/_jsxDEV(EventFeedback, {\n        medias: eventInfo.Feedback_medias\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n      media: media,\n      setMedia: setMedia,\n      lang: \"en\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(event, \"AD/Tu8X1bE5dDt32fxzqEkbhvxY=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js"],"names":["useRouter","useEffect","useState","EventToolBar","StoryRead","StoryWatch","StoryListen","EventFeedback","event","fetchedContent","lang","router","query","location","setLocation","media","setMedia","place","split","theme","stories","modes","randomNumber","Math","round","random","eventInfo","console","log","charAt","toUpperCase","slice","date","replace","map","index","filename","Feedback_medias"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { getEvents } from '../../lib/api'\n\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar'\nimport StoryRead from '../../components/Event/StoryRead'\nimport StoryWatch from '../../components/Event/StoryWatch'\nimport StoryListen from '../../components/Event/StoryListen'\nimport EventFeedback from '../../components/Event/EventFeedback'\n\nexport default function event({ fetchedContent, lang }) {\n\n  const router = useRouter()\n  const [location, setLocation] = useState(router.query.event)\n  const [media, setMedia] = useState('read');\n  const place = location.split('-')[0]\n  const theme = location.split('-')[1]\n  const stories = [1,2,3];\n\n  const modes = ['read','watch','listen','feedback','surprise']\n\n  useEffect(() => {\n    if(media === \"surprise\") {\n      const randomNumber = Math.round(Math.random()*3);\n      setMedia(modes[randomNumber]);\n    }              \n  },[media])\n\n  const eventInfo = fetchedContent;\n\n  console.log(lang);\n\n  return (\n    <div className=\"event\">\n      <div className=\"event-wrapper\">\n        <div className=\"event__info\">\n          <h2 className=\"event__info__theme\">{theme.charAt(0).toUpperCase() + theme.slice(1)}</h2>\n          <h2 className=\"event__info__dateplace\">{place.charAt(0).toUpperCase() + place.slice(1)} — {eventInfo.date.replace(' 00:00', '').replace(/-/g,'.')}</h2>\n        </div>\n        <EventToolBar media={media} setMedia={setMedia} lang={lang}/>\n        { media !== 'feedback' && (\n          <div className=\"event__stories\">\n            {\n              stories.map((index) => (\n                <div className=\"event__stories__single\">\n                <h3 className=\"event__stories__single__title\">{eventInfo[`Title${index}`]}</h3>\n                <div className=\"event__stories__single__content\">\n                  { media === 'read' && ( <StoryRead text={eventInfo[`Text${index}`]} photo={eventInfo[`Photo${index}`].filename}/> )}\n                  { media === 'watch' && ( <StoryWatch video={eventInfo[`Video${index}`].filename} /> )}\n                  { media === 'listen' && ( <StoryListen audio={eventInfo[`Audio${index}`].filename}/> )}\n                </div>\n              </div>\n              ))\n            }\n          </div>\n          )\n        }\n        { media === 'feedback' && ( <EventFeedback medias={eventInfo.Feedback_medias}/> )}\n      </div>\n      <EventToolBar media={media} setMedia={setMedia} lang='en'/>\n    </div>\n  )\n}\n\nexport async function getServerSideProps({preview=null, params}) {\n  const location = params.event;\n  const place = location.split('-')[0]\n  const theme = location.split('-')[1]\n  const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n  return {\n      props: { fetchedContent },\n  }\n}"]},"metadata":{},"sourceType":"module"}