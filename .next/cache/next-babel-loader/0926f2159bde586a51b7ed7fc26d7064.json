{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js\";\nimport { useEffect, useState } from 'react';\nimport { getThemes, getEventList, getHome } from '../lib/api';\nimport ArchiveList from '../components/Archive/ArchiveList';\nimport ArchiveLocations from '../components/Archive/ArchiveLocations';\n\nconst Archive = ({\n  lang,\n  themes,\n  events\n}) => {\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }); // const archivedThemes = themes.filter((theme) => theme.content.Timing[0] === \"archived\")\n\n  const archivedThemes = themes;\n  console.log(archivedThemes);\n  const newThemes = archivedThemes.map(theme => ({\n    title: [theme.content.Title],\n    events: [...events.map(event => ({\n      city: event.full_slug.split('archived-events/').pop().split('/')[0],\n      date: event.content.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.'),\n      link: `${event.full_slug.split('archived-events/').pop().split('/')[0]}-${theme.content.title}`\n    }))]\n  }));\n  let cityList = [];\n  events.forEach(element => {\n    let exists = false;\n    const thisCity = element.full_slug.split('archived-events/').pop().split('/')[0];\n    cityList.forEach(city => {\n      if (city === thisCity) exists = true;\n    });\n    if (!exists) cityList.push(thisCity);\n  });\n  const newPlaces = cityList.map(city => ({\n    city: city,\n    events: events.filter(event => event.full_slug.split('archived-events/').pop().split('/')[0] === city).map(event => ({\n      theme: event.content.theme.name,\n      date: event.content.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.'),\n      link: `${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name}`\n    }))\n  }));\n  const archiveList = {\n    theme: [...newThemes],\n    place: [...newPlaces]\n  };\n  const {\n    0: archiveMode,\n    1: setArchiveMode\n  } = useState('place');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"archive\",\n    children: [/*#__PURE__*/_jsxDEV(ArchiveLocations, {\n      cityList: cityList,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArchiveList, {\n      archiveMode: archiveMode,\n      archiveList: archiveList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps({\n  preview = null\n}) {\n  const themes = (await getThemes(preview)) || [];\n  const events = (await getEventList(preview)) || [];\n  const homeContent = (await getHome(preview)) || [];\n  return {\n    props: {\n      themes,\n      events,\n      homeContent\n    }\n  };\n}\nexport default Archive;","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js"],"names":["useEffect","useState","getThemes","getEventList","getHome","ArchiveList","ArchiveLocations","Archive","lang","themes","events","document","querySelector","classList","remove","archivedThemes","console","log","newThemes","map","theme","title","content","Title","event","city","full_slug","split","pop","date","replace","reverse","join","link","cityList","forEach","element","exists","thisCity","push","newPlaces","filter","name","archiveList","place","archiveMode","setArchiveMode","getServerSideProps","preview","homeContent","props"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { getThemes, getEventList, getHome } from '../lib/api'\n\nimport ArchiveList from '../components/Archive/ArchiveList'\nimport ArchiveLocations from '../components/Archive/ArchiveLocations'\n\nconst Archive = ({ lang, themes, events }) => {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  })\n\n  // const archivedThemes = themes.filter((theme) => theme.content.Timing[0] === \"archived\")\n  const archivedThemes = themes;\n\n  console.log(archivedThemes);\n\n  const newThemes = archivedThemes.map((theme) => ({\n    title: [theme.content.Title],\n    events: [...events.map((event) => ({\n      city: event.full_slug.split('archived-events/').pop().split('/')[0],\n      date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n      link: `${event.full_slug.split('archived-events/').pop().split('/')[0]}-${theme.content.title}`\n    }))],\n  }))\n\n  let cityList = [];\n  events.forEach(element => {\n    let exists = false;\n    const thisCity = element.full_slug.split('archived-events/').pop().split('/')[0]\n    cityList.forEach((city) => {\n      if (city === thisCity) exists = true;\n    })\n    if(!exists) cityList.push(thisCity);\n  });\n\n  const newPlaces = cityList.map((city) => ({\n    city: city,\n    events: events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === city).map((event) => ({\n      theme: event.content.theme.name,\n      date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n      link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name}`,\n    }))\n  }))\n\n  const archiveList = {\n    theme: [\n      ...newThemes\n    ],\n    place: [\n      ...newPlaces\n    ]\n  }\n\n  const [archiveMode, setArchiveMode] = useState('place');\n  \n  return (\n    <div id=\"archive\">\n      <ArchiveLocations cityList={cityList} lang={lang}/>\n      <ArchiveList archiveMode={archiveMode} archiveList={archiveList}/>\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  const events = (await getEventList(preview)) || []\n  const homeContent = (await getHome(preview)) || []\n  return {\n      props: { themes, events, homeContent },\n  }\n}\n\nexport default Archive\n"]},"metadata":{},"sourceType":"module"}