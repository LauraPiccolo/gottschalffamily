{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories/[event].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar';\nimport StoryRead from '../../components/Event/StoryRead';\nimport StoryWatch from '../../components/Event/StoryWatch';\nimport StoryListen from '../../components/Event/StoryListen';\nimport EventFeedback from '../../components/Event/EventFeedback';\nexport var __N_SSP = true;\nexport default function event(_ref) {\n  _s();\n\n  var _this = this;\n\n  var themes = _ref.themes,\n      lang = _ref.lang;\n  useEffect(function () {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }, []);\n  var router = useRouter();\n\n  var _useState = useState(router.query.event),\n      location = _useState[0],\n      setLocation = _useState[1];\n\n  var _useState2 = useState('read'),\n      media = _useState2[0],\n      setMedia = _useState2[1];\n\n  var place = location.split('-')[0];\n  var theme = location.split('-')[1];\n  var stories = [1, 2, 3];\n  console.log(theme, place);\n  var modes = ['read', 'watch', 'listen', 'feedback', 'surprise'];\n  useEffect(function () {\n    if (media !== 'feedback') document.querySelector('.event__stories').scrollTo(0, 0);\n\n    if (media === \"surprise\") {\n      var randomNumber = Math.round(Math.random() * 3);\n      setMedia(modes[randomNumber]);\n      if (modes[randomNumber] !== 'feedback') document.querySelector('.event__stories').scrollTo(0, 0);\n    }\n  }, [media]);\n  var eventInfo = themes.filter(function (themee) {\n    return themee.content.Title === theme;\n  })[0].content.events.filter(function (event) {\n    return event.location[0] === place;\n  })[0];\n  console.log(eventInfo.stories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__theme\",\n          children: theme.charAt(0).toUpperCase() + theme.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__dateplace\",\n          children: [place.charAt(0).toUpperCase() + place.slice(1), \" \\u2014 \", eventInfo.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n        media: media,\n        setMedia: setMedia,\n        lang: lang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), media !== 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__stories\",\n        children: eventInfo.stories.map(function (story, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event__stories__single\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"event__stories__single__title\",\n              children: story.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event__stories__single__content\",\n              children: [media === 'read' && /*#__PURE__*/_jsxDEV(StoryRead, {\n                text: story.Text[0].content,\n                photo: story.Photo.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 43\n              }, _this), media === 'watch' && /*#__PURE__*/_jsxDEV(StoryWatch, {\n                video: story.Video\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 44\n              }, _this), media === 'listen' && /*#__PURE__*/_jsxDEV(StoryListen, {\n                audio: story.Audio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), media === 'feedback' && /*#__PURE__*/_jsxDEV(EventFeedback, {\n        medias: eventInfo.feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n      media: media,\n      setMedia: setMedia,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps({preview=null, params}) {\n//   const location = params.event;\n//   const place = location.split('-')[0]\n//   const theme = location.split('-')[1]\n//   const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n//   return {\n//       props: { fetchedContent },\n//   }\n// }\n\n_s(event, \"wJ9qg/O+kmJfhCQSgZZtPWHt/iQ=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories/[event].js"],"names":["useRouter","useEffect","useState","EventToolBar","StoryRead","StoryWatch","StoryListen","EventFeedback","event","themes","lang","document","querySelector","classList","remove","router","query","location","setLocation","media","setMedia","place","split","theme","stories","console","log","modes","scrollTo","randomNumber","Math","round","random","eventInfo","filter","themee","content","Title","events","charAt","toUpperCase","slice","date","replace","reverse","join","map","story","index","Text","Photo","filename","Video","Audio","feedback"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { getThemes} from '../../lib/api'\n\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar'\nimport StoryRead from '../../components/Event/StoryRead'\nimport StoryWatch from '../../components/Event/StoryWatch'\nimport StoryListen from '../../components/Event/StoryListen'\nimport EventFeedback from '../../components/Event/EventFeedback'\n\nexport default function event({ themes, lang }) {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }, [])\n\n  const router = useRouter()\n  const [location, setLocation] = useState(router.query.event)\n  const [media, setMedia] = useState('read');\n  const place = location.split('-')[0]\n  const theme = location.split('-')[1]\n  const stories = [1,2,3];\n\n  console.log(theme, place);\n\n  const modes = ['read','watch','listen','feedback','surprise']\n\n  useEffect(() => {\n    if(media !=='feedback') document.querySelector('.event__stories').scrollTo(0,0);\n    if(media === \"surprise\") {\n      const randomNumber = Math.round(Math.random()*3);\n      setMedia(modes[randomNumber]);\n      if(modes[randomNumber] !=='feedback') document.querySelector('.event__stories').scrollTo(0,0);\n    }              \n  },[media])\n\n  const eventInfo = themes.filter((themee) => themee.content.Title === theme)[0].content.events.filter((event) => event.location[0] === place)[0];\n\n  console.log(eventInfo.stories);\n\n  return (\n    <div className=\"event\">\n      <div className=\"event-wrapper\">\n        <div className=\"event__info\">\n          <h2 className=\"event__info__theme\">{theme.charAt(0).toUpperCase() + theme.slice(1)}</h2>\n          <h2 className=\"event__info__dateplace\">{place.charAt(0).toUpperCase() + place.slice(1)} — {eventInfo.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.')}</h2>\n        </div>\n        <EventToolBar media={media} setMedia={setMedia} lang={lang}/>\n        { media !== 'feedback' && (\n          <div className=\"event__stories\">\n            {\n              eventInfo.stories.map((story, index) => (\n                <div className=\"event__stories__single\" key={index}>\n                <h3 className=\"event__stories__single__title\">{story.Title}</h3>\n                <div className=\"event__stories__single__content\">\n                  { media === 'read' && ( <StoryRead text={story.Text[0].content} photo={story.Photo.filename}/> )}\n                  { media === 'watch' && ( <StoryWatch video={story.Video} /> )}\n                  { media === 'listen' && ( <StoryListen audio={story.Audio}/> )}\n                </div>\n              </div>\n              ))\n            }\n          </div>\n          )\n        }\n        { media === 'feedback' && ( <EventFeedback medias={eventInfo.feedback}/> )}\n      </div>\n      <EventToolBar media={media} setMedia={setMedia} lang={lang}/>\n    </div>\n  )\n}\n\n// export async function getServerSideProps({preview=null, params}) {\n//   const location = params.event;\n//   const place = location.split('-')[0]\n//   const theme = location.split('-')[1]\n//   const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n//   return {\n//       props: { fetchedContent },\n//   }\n// }\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  return {\n      props: { themes },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}