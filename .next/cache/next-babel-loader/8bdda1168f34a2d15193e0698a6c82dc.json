{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js\";\n\nconst EventToolBar = ({\n  media,\n  setMedia,\n  lang\n}) => {\n  lang = 'en';\n  const modes = {\n    en: ['read', 'watch', 'listen', 'feedback', 'surprise'],\n    ar: ['read', 'watch', 'listen', 'feedback', 'surprise'],\n    de: [\"Lesen\", \"Anschauen\", \"Zuhören\", \"Feedback\", \"Überraschung\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event__toolbar\",\n    children: modes.map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `event__toolbar__button${media === mode ? ' event__toolbar__button--selected' : ''}`,\n      onClick: () => setMedia(mode),\n      children: mode === 'surprise' ? 'Surprise me!' : mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\nexport default EventToolBar;","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js"],"names":["EventToolBar","media","setMedia","lang","modes","en","ar","de","map","mode"],"mappings":";;;AAAA,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAEhDA,EAAAA,IAAI,GAAC,IAAL;AACA,QAAMC,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,EAAyB,UAAzB,EAAoC,UAApC,CADQ;AAEZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,EAAyB,UAAzB,EAAoC,UAApC,CAFQ;AAGZC,IAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,cAA9C;AAHQ,GAAd;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAEQH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACR;AAAQ,MAAA,SAAS,EAAG,yBAAwBR,KAAK,KAAKQ,IAAV,GAAiB,mCAAjB,GAAqD,EAAG,EAApG;AAAuG,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,IAAD,CAA9H;AAAA,gBAAuIA,IAAI,KAAK,UAAT,GAAsB,cAAtB,GAAuCA;AAA9K;AAAA;AAAA;AAAA;AAAA,YADF;AAFR;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlBH;;AAoBE,eAAeT,YAAf","sourcesContent":["const EventToolBar = ({ media, setMedia, lang }) => {\n\n    lang='en';\n    const modes = {\n      en: ['read','watch','listen','feedback','surprise'],\n      ar: ['read','watch','listen','feedback','surprise'],\n      de: [\"Lesen\", \"Anschauen\", \"Zuhören\", \"Feedback\", \"Überraschung\"]\n    }\n\n    return (\n      <div className=\"event__toolbar\">\n          {\n              modes.map((mode) => (\n                <button className={`event__toolbar__button${media === mode ? ' event__toolbar__button--selected':''}`} onClick={() => setMedia(mode)}>{mode === 'surprise' ? 'Surprise me!' : mode}</button>\n              ))\n          }\n      </div>\n    );\n  };\n  \n  export default EventToolBar;\n  "]},"metadata":{},"sourceType":"module"}