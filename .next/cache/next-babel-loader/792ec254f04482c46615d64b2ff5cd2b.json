{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js\",\n    _this = this;\n\nvar EventToolBar = function EventToolBar(_ref) {\n  var media = _ref.media,\n      setMedia = _ref.setMedia;\n  var modes = ['read', 'watch', 'listen', 'photos', 'surprise'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event__toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"archive__toolbar__button\".concat(archiveMode === 'place' ? ' archive__toolbar__button--selected' : ''),\n      onClick: function onClick() {\n        return setMedia('place');\n      },\n      children: \"ORDER BY PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"archive__toolbar__button\".concat(archiveMode === 'theme' ? ' archive__toolbar__button--selected' : ''),\n      onClick: function onClick() {\n        return setMedia('theme');\n      },\n      children: \"ORDER BY THEME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = EventToolBar;\nexport default EventToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventToolBar\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js"],"names":["EventToolBar","media","setMedia","modes","archiveMode"],"mappings":";;;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAE1C,MAAMC,KAAK,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,EAAyB,QAAzB,EAAkC,UAAlC,CAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,oCAA6BC,WAAW,KAAK,OAAhB,GAA0B,qCAA1B,GAAgE,EAA7F,CAAjB;AAAoH,MAAA,OAAO,EAAE;AAAA,eAAMF,QAAQ,CAAC,OAAD,CAAd;AAAA,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAQ,MAAA,SAAS,oCAA6BE,WAAW,KAAK,OAAhB,GAA0B,qCAA1B,GAAgE,EAA7F,CAAjB;AAAoH,MAAA,OAAO,EAAE;AAAA,eAAMF,QAAQ,CAAC,OAAD,CAAd;AAAA,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAVH;;KAAMF,Y;AAYJ,eAAeA,YAAf","sourcesContent":["const EventToolBar = ({ media, setMedia }) => {\n\n    const modes = ['read','watch','listen','photos','surprise']\n\n    return (\n      <div className=\"event__toolbar\">\n        <button className={`archive__toolbar__button${archiveMode === 'place' ? ' archive__toolbar__button--selected':''}`} onClick={() => setMedia('place')}>ORDER BY PLACE</button>\n        <button className={`archive__toolbar__button${archiveMode === 'theme' ? ' archive__toolbar__button--selected':''}`} onClick={() => setMedia('theme')}>ORDER BY THEME</button>\n      </div>\n    );\n  };\n  \n  export default EventToolBar;\n  "]},"metadata":{},"sourceType":"module"}