{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories/[event].js\";\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { getThemes } from '../../lib/api'; // FETCH\n// import staticContent from '../../data'\n\nimport EventToolBar from '../../components/Event/EventToolBar';\nimport StoryRead from '../../components/Event/StoryRead';\nimport StoryWatch from '../../components/Event/StoryWatch';\nimport StoryListen from '../../components/Event/StoryListen';\nimport EventFeedback from '../../components/Event/EventFeedback';\nexport default function event({\n  themes,\n  lang\n}) {\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }, []);\n  const router = useRouter();\n  const {\n    0: location,\n    1: setLocation\n  } = useState(router.query.event);\n  const {\n    0: media,\n    1: setMedia\n  } = useState('read');\n  const place = location.split('-')[0];\n  const theme = location.split('-')[1];\n  const stories = [1, 2, 3];\n  const modes = ['read', 'watch', 'listen', 'feedback', 'surprise'];\n  useEffect(() => {\n    if (media !== 'feedback') document.querySelector('.event__stories').scrollTo(0, 0);\n\n    if (media === \"surprise\") {\n      const randomNumber = Math.round(Math.random() * 3);\n      setMedia(modes[randomNumber]);\n      if (modes[randomNumber] !== 'feedback') document.querySelector('.event__stories').scrollTo(0, 0);\n    }\n  }, [media]);\n  const eventInfo = themes.filter(themee => themee.content.title === theme)[0].content.events.filter(event => event.location === place)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__theme\",\n          children: theme.charAt(0).toUpperCase() + theme.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"event__info__dateplace\",\n          children: [place.charAt(0).toUpperCase() + place.slice(1), \" \\u2014 \", eventInfo.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n        media: media,\n        setMedia: setMedia,\n        lang: lang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), media !== 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__stories\",\n        children: stories.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event__stories__single\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"event__stories__single__title\",\n            children: eventInfo[`Title${index}`]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event__stories__single__content\",\n            children: [media === 'read' && /*#__PURE__*/_jsxDEV(StoryRead, {\n              text: eventInfo[`Text${index}`],\n              photo: eventInfo[`Photo${index}`].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 43\n            }, this), media === 'watch' && /*#__PURE__*/_jsxDEV(StoryWatch, {\n              video: eventInfo[`Video${index}`]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 44\n            }, this), media === 'listen' && /*#__PURE__*/_jsxDEV(StoryListen, {\n              audio: eventInfo[`Audio${index}`]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), media === 'feedback' && /*#__PURE__*/_jsxDEV(EventFeedback, {\n        medias: eventInfo.Feedback_medias\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n      media: media,\n      setMedia: setMedia,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps({preview=null, params}) {\n//   const location = params.event;\n//   const place = location.split('-')[0]\n//   const theme = location.split('-')[1]\n//   const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n//   return {\n//       props: { fetchedContent },\n//   }\n// }\n\nexport async function getServerSideProps({\n  preview = null\n}) {\n  const themes = (await getThemes(preview)) || [];\n  return {\n    props: {\n      themes\n    }\n  };\n}","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories/[event].js"],"names":["useRouter","useEffect","useState","getThemes","EventToolBar","StoryRead","StoryWatch","StoryListen","EventFeedback","event","themes","lang","document","querySelector","classList","remove","router","location","setLocation","query","media","setMedia","place","split","theme","stories","modes","scrollTo","randomNumber","Math","round","random","eventInfo","filter","themee","content","title","events","charAt","toUpperCase","slice","date","replace","reverse","join","map","index","filename","Feedback_medias","getServerSideProps","preview","props"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { getThemes} from '../../lib/api'\n\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar'\nimport StoryRead from '../../components/Event/StoryRead'\nimport StoryWatch from '../../components/Event/StoryWatch'\nimport StoryListen from '../../components/Event/StoryListen'\nimport EventFeedback from '../../components/Event/EventFeedback'\n\nexport default function event({ themes, lang }) {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }, [])\n\n  const router = useRouter()\n  const [location, setLocation] = useState(router.query.event)\n  const [media, setMedia] = useState('read');\n  const place = location.split('-')[0]\n  const theme = location.split('-')[1]\n  const stories = [1,2,3];\n\n  const modes = ['read','watch','listen','feedback','surprise']\n\n  useEffect(() => {\n    if(media !=='feedback') document.querySelector('.event__stories').scrollTo(0,0);\n    if(media === \"surprise\") {\n      const randomNumber = Math.round(Math.random()*3);\n      setMedia(modes[randomNumber]);\n      if(modes[randomNumber] !=='feedback') document.querySelector('.event__stories').scrollTo(0,0);\n    }              \n  },[media])\n\n  const eventInfo = themes.filter((themee) => themee.content.title === theme)[0].content.events.filter((event) => event.location === place)[0];\n\n  return (\n    <div className=\"event\">\n      <div className=\"event-wrapper\">\n        <div className=\"event__info\">\n          <h2 className=\"event__info__theme\">{theme.charAt(0).toUpperCase() + theme.slice(1)}</h2>\n          <h2 className=\"event__info__dateplace\">{place.charAt(0).toUpperCase() + place.slice(1)} — {eventInfo.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.')}</h2>\n        </div>\n        <EventToolBar media={media} setMedia={setMedia} lang={lang}/>\n        { media !== 'feedback' && (\n          <div className=\"event__stories\">\n            {\n              stories.map((index) => (\n                <div className=\"event__stories__single\" key={index}>\n                <h3 className=\"event__stories__single__title\">{eventInfo[`Title${index}`]}</h3>\n                <div className=\"event__stories__single__content\">\n                  { media === 'read' && ( <StoryRead text={eventInfo[`Text${index}`]} photo={eventInfo[`Photo${index}`].filename}/> )}\n                  { media === 'watch' && ( <StoryWatch video={eventInfo[`Video${index}`]} /> )}\n                  { media === 'listen' && ( <StoryListen audio={eventInfo[`Audio${index}`]}/> )}\n                </div>\n              </div>\n              ))\n            }\n          </div>\n          )\n        }\n        { media === 'feedback' && ( <EventFeedback medias={eventInfo.Feedback_medias}/> )}\n      </div>\n      <EventToolBar media={media} setMedia={setMedia} lang={lang}/>\n    </div>\n  )\n}\n\n// export async function getServerSideProps({preview=null, params}) {\n//   const location = params.event;\n//   const place = location.split('-')[0]\n//   const theme = location.split('-')[1]\n//   const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n//   return {\n//       props: { fetchedContent },\n//   }\n// }\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  return {\n      props: { themes },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}