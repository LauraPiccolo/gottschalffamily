{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js\";\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { getEvents } from '../../lib/api'; // FETCH\n// import staticContent from '../../data'\n\nimport EventToolBar from '../../components/Event/EventToolBar';\nimport StoryRead from '../../components/Event/StoryRead';\nimport StoryWatch from '../../components/Event/StoryWatch';\nimport StoryListen from '../../components/Event/StoryListen';\nimport EventFeedback from '../../components/Event/EventFeedback';\nexport default function event({\n  fetchedContent\n}) {\n  const router = useRouter();\n  const {\n    0: location,\n    1: setLocation\n  } = useState(router.query.event);\n  const {\n    0: media,\n    1: setMedia\n  } = useState('watch');\n  const place = location.split('-')[0];\n  const theme = location.split('-')[1];\n  const stories = [1, 2, 3];\n  const modes = ['read', 'watch', 'listen', 'feedback', 'surprise'];\n  useEffect(() => {\n    if (media === \"surprise\") {\n      const randomNumber = Math.round(Math.random() * 3);\n      console.log(randomNumber);\n      setMedia(modes[randomNumber]);\n    }\n  }, [media]);\n  const eventInfo = fetchedContent;\n  console.log(eventInfo.Photo1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"event__info__theme\",\n        children: theme.charAt(0).toUpperCase() + theme.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"event__info__dateplace\",\n        children: [place.charAt(0).toUpperCase() + place.slice(1), \" \\u2014 \", eventInfo.date.replace(' 00:00', '').replace(/-/g, '.')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n      media: media,\n      setMedia: setMedia\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), media !== 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event__stories\",\n      children: stories.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event__stories__single\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"event__stories__single__title\",\n          children: eventInfo[`Title${index}`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event__stories__single__content\",\n          children: [media === 'read' && /*#__PURE__*/_jsxDEV(StoryRead, {\n            text: eventInfo[`Text${index}`],\n            photo: eventInfo[`Photo${index}`].filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this), media === 'watch' && /*#__PURE__*/_jsxDEV(StoryWatch, {\n            video: eventInfo[`Video${index}`].filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 42\n          }, this), media === 'listen' && /*#__PURE__*/_jsxDEV(StoryListen, {\n            audio: eventInfo[`Audio${index}`].filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), media === 'feedback' && /*#__PURE__*/_jsxDEV(EventFeedback, {\n      medias: eventInfo.Feedback_medias\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps({\n  preview = null\n}) {\n  const fetchedContent = (await getEvents(preview)) || [];\n  return {\n    props: {\n      fetchedContent\n    }\n  };\n}","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js"],"names":["useRouter","useEffect","useState","getEvents","EventToolBar","StoryRead","StoryWatch","StoryListen","EventFeedback","event","fetchedContent","router","location","setLocation","query","media","setMedia","place","split","theme","stories","modes","randomNumber","Math","round","random","console","log","eventInfo","Photo1","charAt","toUpperCase","slice","date","replace","map","index","filename","Feedback_medias","getServerSideProps","preview","props"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { getEvents } from '../../lib/api'\n\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar'\nimport StoryRead from '../../components/Event/StoryRead'\nimport StoryWatch from '../../components/Event/StoryWatch'\nimport StoryListen from '../../components/Event/StoryListen'\nimport EventFeedback from '../../components/Event/EventFeedback'\n\nexport default function event({ fetchedContent }) {\n\n  const router = useRouter()\n  const [location, setLocation] = useState(router.query.event)\n  const [media, setMedia] = useState('watch');\n  const place = location.split('-')[0]\n  const theme = location.split('-')[1]\n  const stories = [1,2,3];\n\n  const modes = ['read','watch','listen','feedback','surprise']\n\n  useEffect(() => {\n    if(media === \"surprise\") {\n      const randomNumber = Math.round(Math.random()*3);\n      console.log(randomNumber);\n      setMedia(modes[randomNumber]);\n    }              \n  },[media])\n\n  const eventInfo = fetchedContent;\n  console.log(eventInfo.Photo1)\n\n  return (\n    <div className=\"event\">\n      <div className=\"event__info\">\n        <h2 className=\"event__info__theme\">{theme.charAt(0).toUpperCase() + theme.slice(1)}</h2>\n        <h2 className=\"event__info__dateplace\">{place.charAt(0).toUpperCase() + place.slice(1)} â€” {eventInfo.date.replace(' 00:00', '').replace(/-/g,'.')}</h2>\n      </div>\n      <EventToolBar media={media} setMedia={setMedia}/>\n      { media !== 'feedback' && (\n        <div className=\"event__stories\">\n          {\n            stories.map((index) => (\n              <div className=\"event__stories__single\">\n              <h3 className=\"event__stories__single__title\">{eventInfo[`Title${index}`]}</h3>\n              <div className=\"event__stories__single__content\">\n                { media === 'read' && ( <StoryRead text={eventInfo[`Text${index}`]} photo={eventInfo[`Photo${index}`].filename}/> )}\n                { media === 'watch' && ( <StoryWatch video={eventInfo[`Video${index}`].filename} /> )}\n                { media === 'listen' && ( <StoryListen audio={eventInfo[`Audio${index}`].filename}/> )}\n              </div>\n            </div>\n            ))\n          }\n        </div>\n        )\n      }\n      { media === 'feedback' && ( <EventFeedback medias={eventInfo.Feedback_medias}/> )}\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ preview = null }) {\n  const fetchedContent = (await getEvents(preview)) || []\n  return {\n      props: { fetchedContent },\n  }\n}"]},"metadata":{},"sourceType":"module"}