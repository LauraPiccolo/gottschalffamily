{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Languages/index.js\",\n    _this = this;\n\nvar Languages = function Languages(_ref) {\n  var setLang = _ref.setLang,\n      currentLang = _ref.currentLang;\n  var languages = ['de', 'en', 'ar'];\n\n  var changeLanguage = function changeLanguage(event, lang) {\n    console.log(event.currentTarget.parentElement.parentElement.parentElement.parentElement.className);\n\n    if (window.clientWidth >= 700) {\n      event.preventDefault();\n      setLang(lang);\n    }\n  };\n\n  var toggleMenu = function toggleMenu(event) {\n    if (event.currentTarget.parentElement.className === \"container\") {\n      if (document.body.clientWidth <= 750) {\n        document.querySelector('.menu').classList.toggle('menu--open');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"languages\",\n    onClick: function onClick(event) {\n      return toggleMenu(event);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [languages.map(function (lang) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick(event) {\n            return changeLanguage(event, lang);\n          },\n          className: \"\".concat(lang === currentLang ? 'languages__active' : ''),\n          children: lang\n        }, lang, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"header__menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n}; // == Export\n\n\n_c = Languages;\nexport default Languages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Languages/index.js"],"names":["Languages","setLang","currentLang","languages","changeLanguage","event","lang","console","log","currentTarget","parentElement","className","window","clientWidth","preventDefault","toggleMenu","document","body","querySelector","classList","toggle","map"],"mappings":";;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAE9C,MAAMC,SAAS,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAlB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,aAAN,CAAoBC,aAApB,CAAkCA,aAAlC,CAAgDA,aAAhD,CAA8DA,aAA9D,CAA4EC,SAAxF;;AACA,QAAGC,MAAM,CAACC,WAAP,IAAsB,GAAzB,EAA8B;AAC5BR,MAAAA,KAAK,CAACS,cAAN;AACAb,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD;AACF,GAND;;AAQA,MAAMS,UAAU,GAAG,SAAbA,UAAa,CAACV,KAAD,EAAW;AAC5B,QAAGA,KAAK,CAACI,aAAN,CAAoBC,aAApB,CAAkCC,SAAlC,KAAgD,WAAnD,EAAgE;AAC9D,UAAGK,QAAQ,CAACC,IAAT,CAAcJ,WAAd,IAA6B,GAAhC,EAAqC;AACnCG,QAAAA,QAAQ,CAACE,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,YAAjD;AACD;AACF;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,iBAACf,KAAD;AAAA,aAAWU,UAAU,CAACV,KAAD,CAArB;AAAA,KAApC;AAAA,2BACE;AAAA,iBAEIF,SAAS,CAACkB,GAAV,CAAc,UAACf,IAAD;AAAA,4BACZ;AACA,UAAA,OAAO,EAAE,iBAACD,KAAD;AAAA,mBAAWD,cAAc,CAACC,KAAD,EAAQC,IAAR,CAAzB;AAAA,WADT;AAEA,UAAA,SAAS,YAAKA,IAAI,KAAKJ,WAAT,GAAuB,mBAAvB,GAA2C,EAAhD,CAFT;AAAA,oBAGGI;AAHH,WAEoEA,IAFpE;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAd,CAFJ,eAUI;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CApCD,C,CAsCA;;;KAtCMN,S;AAuCN,eAAeA,SAAf","sourcesContent":["\nconst Languages = ({ setLang, currentLang }) => {\n\n  const languages = ['de','en','ar'];\n\n  const changeLanguage = (event, lang) => {\n    console.log(event.currentTarget.parentElement.parentElement.parentElement.parentElement.className);\n    if(window.clientWidth >= 700) {\n      event.preventDefault(); \n      setLang(lang);\n    }\n  }\n\n  const toggleMenu = (event) => {\n    if(event.currentTarget.parentElement.className === \"container\") {\n      if(document.body.clientWidth <= 750) {\n        document.querySelector('.menu').classList.toggle('menu--open');\n      }\n    }\n  }\n\n  return (\n    <nav className=\"languages\" onClick={(event) => toggleMenu(event)}>\n      <ul>\n        {\n          languages.map((lang) => (\n            <li \n            onClick={(event) => changeLanguage(event, lang)} \n            className={`${lang === currentLang ? 'languages__active':''}`} key={lang}>\n              {lang}\n            </li>\n          ))\n        }\n          <li className=\"header__menu\" /> \n      </ul>\n    </nav>\n  );\n};\n\n// == Export\nexport default Languages;\n"]},"metadata":{},"sourceType":"module"}