{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/lib/api.js\";\nimport StoryblokClient from 'storyblok-js-client';\n\nclass StoryblokService {\n  constructor() {\n    this.devMode = false; // Always loads draft\n\n    this.token = 'zpjVfToBDoqLTFrpreoYMwtt';\n    this.client = new StoryblokClient({\n      accessToken: this.token,\n      cache: {\n        clear: 'auto',\n        type: 'memory'\n      }\n    });\n    this.query = {};\n  }\n\n  getCacheVersion() {\n    return this.client.cacheVersion;\n  }\n\n  get(slug, params) {\n    params = params || {};\n\n    if (this.getQuery('_storyblok') || this.devMode || false && window.storyblok) {\n      params.version = 'draft';\n    }\n\n    if (false && typeof window.StoryblokCacheVersion !== 'undefined') {\n      params.cv = window.StoryblokCacheVersion;\n    }\n\n    return this.client.get(slug, params);\n  }\n\n  initEditor(reactComponent) {\n    if (window.storyblok) {\n      window.storyblok.init();\n      window.storyblok.on(['change', 'published'], () => location.reload(true)); // this will alter the state and replaces the current story with a current raw story object (no resolved relations or links)\n\n      window.storyblok.on('input', event => {\n        if (event.story.content._uid === reactComponent.state.pageContent._uid) {\n          reactComponent.setState({\n            pageContent: window.storyblok.addComments(event.story.content, event.story.id)\n          });\n        }\n      });\n    }\n  }\n\n  setQuery(query) {\n    this.query = query;\n  }\n\n  getQuery(param) {\n    return this.query[param];\n  }\n\n  bridge() {\n    if (!this.getQuery('_storyblok') && !this.devMode) {\n      return '';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"script\", {\n      src: '//app.storyblok.com/f/storyblok-latest.js?t=' + this.token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst storyblokInstance = new StoryblokService();\nexport default storyblokInstance;","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/lib/api.js"],"names":["StoryblokClient","StoryblokService","constructor","devMode","token","client","accessToken","cache","clear","type","query","getCacheVersion","cacheVersion","get","slug","params","getQuery","window","storyblok","version","StoryblokCacheVersion","cv","initEditor","reactComponent","init","on","location","reload","event","story","content","_uid","state","pageContent","setState","addComments","id","setQuery","param","bridge","storyblokInstance"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,qBAA5B;;AAEA,MAAMC,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAe,KAAf,CADY,CACS;;AACrB,SAAKC,KAAL,GAAa,0BAAb;AACA,SAAKC,MAAL,GAAc,IAAIL,eAAJ,CAAoB;AAChCM,MAAAA,WAAW,EAAE,KAAKF,KADc;AAEhCG,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,IAAI,EAAE;AAFD;AAFyB,KAApB,CAAd;AAQA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKN,MAAL,CAAYO,YAAnB;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAe;AAChBA,IAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;;AAEA,QAAI,KAAKC,QAAL,CAAc,YAAd,KAA+B,KAAKb,OAApC,IAAgD,SAAiCc,MAAM,CAACC,SAA5F,EAAwG;AACtGH,MAAAA,MAAM,CAACI,OAAP,GAAiB,OAAjB;AACD;;AAED,QAAI,SAAiC,OAAOF,MAAM,CAACG,qBAAd,KAAwC,WAA7E,EAA0F;AACxFL,MAAAA,MAAM,CAACM,EAAP,GAAYJ,MAAM,CAACG,qBAAnB;AACD;;AAED,WAAO,KAAKf,MAAL,CAAYQ,GAAZ,CAAgBC,IAAhB,EAAsBC,MAAtB,CAAP;AACD;;AAEDO,EAAAA,UAAU,CAACC,cAAD,EAAiB;AACzB,QAAIN,MAAM,CAACC,SAAX,EAAsB;AACpBD,MAAAA,MAAM,CAACC,SAAP,CAAiBM,IAAjB;AACAP,MAAAA,MAAM,CAACC,SAAP,CAAiBO,EAAjB,CAAoB,CAAC,QAAD,EAAW,WAAX,CAApB,EAA6C,MAAMC,QAAQ,CAACC,MAAT,CAAgB,IAAhB,CAAnD,EAFoB,CAIpB;;AACAV,MAAAA,MAAM,CAACC,SAAP,CAAiBO,EAAjB,CAAoB,OAApB,EAA8BG,KAAD,IAAW;AACtC,YAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,KAA6BR,cAAc,CAACS,KAAf,CAAqBC,WAArB,CAAiCF,IAAlE,EAAwE;AACtER,UAAAA,cAAc,CAACW,QAAf,CAAwB;AAACD,YAAAA,WAAW,EAAEhB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BP,KAAK,CAACC,KAAN,CAAYC,OAAzC,EAAkDF,KAAK,CAACC,KAAN,CAAYO,EAA9D;AAAd,WAAxB;AACD;AACF,OAJD;AAKD;AACF;;AAEDC,EAAAA,QAAQ,CAAC3B,KAAD,EAAQ;AACd,SAAKA,KAAL,GAAaA,KAAb;AACD;;AAEDM,EAAAA,QAAQ,CAACsB,KAAD,EAAQ;AACd,WAAO,KAAK5B,KAAL,CAAW4B,KAAX,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKvB,QAAL,CAAc,YAAd,CAAD,IAAgC,CAAC,KAAKb,OAA1C,EAAmD;AACjD,aAAO,EAAP;AACD;;AACD,wBAAQ;AAAQ,MAAA,GAAG,EAAE,iDAAiD,KAAKC;AAAnE;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;;AA5DoB;;AA+DvB,MAAMoC,iBAAiB,GAAG,IAAIvC,gBAAJ,EAA1B;AAEA,eAAeuC,iBAAf","sourcesContent":["import StoryblokClient from 'storyblok-js-client'\n\nclass StoryblokService {\n  constructor() {\n    this.devMode = false // Always loads draft\n    this.token = 'zpjVfToBDoqLTFrpreoYMwtt'\n    this.client = new StoryblokClient({\n      accessToken: this.token,\n      cache: {\n        clear: 'auto',\n        type: 'memory'\n      }\n    })\n\n    this.query = {}\n  }\n\n  getCacheVersion() {\n    return this.client.cacheVersion\n  }\n\n  get(slug, params) {\n    params = params || {}\n\n    if (this.getQuery('_storyblok') || this.devMode || (typeof window !== 'undefined' && window.storyblok)) {\n      params.version = 'draft'\n    }\n\n    if (typeof window !== 'undefined' && typeof window.StoryblokCacheVersion !== 'undefined') {\n      params.cv = window.StoryblokCacheVersion\n    }\n\n    return this.client.get(slug, params)\n  }\n\n  initEditor(reactComponent) {\n    if (window.storyblok) {\n      window.storyblok.init()\n      window.storyblok.on(['change', 'published'], () => location.reload(true))\n\n      // this will alter the state and replaces the current story with a current raw story object (no resolved relations or links)\n      window.storyblok.on('input', (event) => {\n        if (event.story.content._uid === reactComponent.state.pageContent._uid) {\n          reactComponent.setState({pageContent: window.storyblok.addComments(event.story.content, event.story.id)})\n        }\n      })\n    }\n  }\n\n  setQuery(query) {\n    this.query = query\n  }\n\n  getQuery(param) {\n    return this.query[param]\n  }\n\n  bridge() {\n    if (!this.getQuery('_storyblok') && !this.devMode) {\n      return ''\n    }\n    return (<script src={'//app.storyblok.com/f/storyblok-latest.js?t=' + this.token}></script>)\n  }\n}\n\nconst storyblokInstance = new StoryblokService()\n\nexport default storyblokInstance"]},"metadata":{},"sourceType":"module"}