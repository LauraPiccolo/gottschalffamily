{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js\",\n    _this = this;\n\nvar EventToolBar = function EventToolBar(_ref) {\n  var media = _ref.media,\n      setMedia = _ref.setMedia,\n      lang = _ref.lang;\n  var modes = {\n    en: ['read', 'watch', 'listen', 'feedback', 'surprise'],\n    ar: ['اقرأ', 'راقب', 'استمع', 'ردود الفعل', 'مفاجأة'],\n    de: [\"Lesen\", \"Anschauen\", \"Zuhören\", \"Feedback\", \"Überraschung\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event__toolbar\",\n    children: modes[lang].map(function (mode) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"event__toolbar__button\".concat(media === mode ? ' event__toolbar__button--selected' : ''),\n        onClick: function onClick() {\n          return setMedia(mode);\n        },\n        children: mode === 'surprise' ? 'Random' : mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = EventToolBar;\nexport default EventToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventToolBar\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/components/Event/EventToolBar/index.js"],"names":["EventToolBar","media","setMedia","lang","modes","en","ar","de","map","mode"],"mappings":";;;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAEhD,MAAMC,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAQ,OAAR,EAAgB,QAAhB,EAAyB,UAAzB,EAAoC,UAApC,CADQ;AAEZC,IAAAA,EAAE,EAAE,CAAC,MAAD,EACJ,MADI,EAEJ,OAFI,EAGJ,YAHI,EAIJ,QAJI,CAFQ;AAQZC,IAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,cAA9C;AARQ,GAAd;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAEQH,KAAK,CAACD,IAAD,CAAL,CAAYK,GAAZ,CAAgB,UAACC,IAAD;AAAA,0BACd;AAAQ,QAAA,SAAS,kCAA2BR,KAAK,KAAKQ,IAAV,GAAiB,mCAAjB,GAAqD,EAAhF,CAAjB;AAAuG,QAAA,OAAO,EAAE;AAAA,iBAAMP,QAAQ,CAACO,IAAD,CAAd;AAAA,SAAhH;AAAA,kBAAuIA,IAAI,KAAK,UAAT,GAAsB,QAAtB,GAAiCA;AAAxK;AAAA;AAAA;AAAA;AAAA,eADc;AAAA,KAAhB;AAFR;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAtBH;;KAAMT,Y;AAwBJ,eAAeA,YAAf","sourcesContent":["const EventToolBar = ({ media, setMedia, lang }) => {\n\n    const modes = {\n      en: ['read','watch','listen','feedback','surprise'],\n      ar: ['اقرأ',\n      'راقب',\n      'استمع',\n      'ردود الفعل',\n      'مفاجأة'\n      ],\n      de: [\"Lesen\", \"Anschauen\", \"Zuhören\", \"Feedback\", \"Überraschung\"]\n    }\n\n    return (\n      <div className=\"event__toolbar\">\n          {\n              modes[lang].map((mode) => (\n                <button className={`event__toolbar__button${media === mode ? ' event__toolbar__button--selected':''}`} onClick={() => setMedia(mode)}>{mode === 'surprise' ? 'Random' : mode}</button>\n              ))\n          }\n      </div>\n    );\n  };\n  \n  export default EventToolBar;\n  "]},"metadata":{},"sourceType":"module"}