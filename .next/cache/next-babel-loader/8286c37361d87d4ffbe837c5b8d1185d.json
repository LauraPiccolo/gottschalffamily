{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar';\nimport StoryRead from '../../components/Event/StoryRead';\nimport StoryWatch from '../../components/Event/StoryWatch';\nimport StoryListen from '../../components/Event/StoryListen';\nimport EventFeedback from '../../components/Event/EventFeedback';\nvar router = useRouter();\n\nvar _useState = useState(router.query.event),\n    location = _useState[0],\n    setLocation = _useState[1];\n\nvar place = location.split('-')[0];\nvar theme = location.split('-')[1];\nexport var __N_SSP = true;\nexport default function event(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fetchedContent = _ref.fetchedContent;\n\n  var _useState2 = useState('watch'),\n      media = _useState2[0],\n      setMedia = _useState2[1];\n\n  var stories = [1, 2, 3];\n  var modes = ['read', 'watch', 'listen', 'feedback', 'surprise'];\n  useEffect(function () {\n    if (media === \"surprise\") {\n      var randomNumber = Math.round(Math.random() * 3);\n      console.log(randomNumber);\n      setMedia(modes[randomNumber]);\n    }\n  }, [media]);\n  var eventInfo = fetchedContent;\n  console.log(eventInfo.Photo1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"event__info__theme\",\n        children: theme.charAt(0).toUpperCase() + theme.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"event__info__dateplace\",\n        children: [place.charAt(0).toUpperCase() + place.slice(1), \" \\u2014 \", eventInfo.date.replace(' 00:00', '').replace(/-/g, '.')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventToolBar, {\n      media: media,\n      setMedia: setMedia\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), media !== 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event__stories\",\n      children: stories.map(function (index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event__stories__single\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"event__stories__single__title\",\n            children: eventInfo[\"Title\".concat(index)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event__stories__single__content\",\n            children: [media === 'read' && /*#__PURE__*/_jsxDEV(StoryRead, {\n              text: eventInfo[\"Text\".concat(index)],\n              photo: eventInfo[\"Photo\".concat(index)].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, _this), media === 'watch' && /*#__PURE__*/_jsxDEV(StoryWatch, {\n              video: eventInfo[\"Video\".concat(index)].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 42\n            }, _this), media === 'listen' && /*#__PURE__*/_jsxDEV(StoryListen, {\n              audio: eventInfo[\"Audio\".concat(index)].filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 43\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), media === 'feedback' && /*#__PURE__*/_jsxDEV(EventFeedback, {\n      medias: eventInfo.Feedback_medias\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(event, \"tLFPih5isjyq5aStNGvUnAtWfq0=\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/pages/archive/[event].js"],"names":["useRouter","useEffect","useState","EventToolBar","StoryRead","StoryWatch","StoryListen","EventFeedback","router","query","event","location","setLocation","place","split","theme","fetchedContent","media","setMedia","stories","modes","randomNumber","Math","round","random","console","log","eventInfo","Photo1","charAt","toUpperCase","slice","date","replace","map","index","filename","Feedback_medias"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { getEvents } from '../../lib/api'\n\n// FETCH\n// import staticContent from '../../data'\nimport EventToolBar from '../../components/Event/EventToolBar'\nimport StoryRead from '../../components/Event/StoryRead'\nimport StoryWatch from '../../components/Event/StoryWatch'\nimport StoryListen from '../../components/Event/StoryListen'\nimport EventFeedback from '../../components/Event/EventFeedback'\n\nconst router = useRouter()\nconst [location, setLocation] = useState(router.query.event)\nconst place = location.split('-')[0]\nconst theme = location.split('-')[1]\n\nexport default function event({ fetchedContent }) {\n\n\n  const [media, setMedia] = useState('watch');\n\n  const stories = [1,2,3];\n\n  const modes = ['read','watch','listen','feedback','surprise']\n\n  useEffect(() => {\n    if(media === \"surprise\") {\n      const randomNumber = Math.round(Math.random()*3);\n      console.log(randomNumber);\n      setMedia(modes[randomNumber]);\n    }              \n  },[media])\n\n  const eventInfo = fetchedContent;\n  console.log(eventInfo.Photo1)\n\n  return (\n    <div className=\"event\">\n      <div className=\"event__info\">\n        <h2 className=\"event__info__theme\">{theme.charAt(0).toUpperCase() + theme.slice(1)}</h2>\n        <h2 className=\"event__info__dateplace\">{place.charAt(0).toUpperCase() + place.slice(1)} â€” {eventInfo.date.replace(' 00:00', '').replace(/-/g,'.')}</h2>\n      </div>\n      <EventToolBar media={media} setMedia={setMedia}/>\n      { media !== 'feedback' && (\n        <div className=\"event__stories\">\n          {\n            stories.map((index) => (\n              <div className=\"event__stories__single\">\n              <h3 className=\"event__stories__single__title\">{eventInfo[`Title${index}`]}</h3>\n              <div className=\"event__stories__single__content\">\n                { media === 'read' && ( <StoryRead text={eventInfo[`Text${index}`]} photo={eventInfo[`Photo${index}`].filename}/> )}\n                { media === 'watch' && ( <StoryWatch video={eventInfo[`Video${index}`].filename} /> )}\n                { media === 'listen' && ( <StoryListen audio={eventInfo[`Audio${index}`].filename}/> )}\n              </div>\n            </div>\n            ))\n          }\n        </div>\n        )\n      }\n      { media === 'feedback' && ( <EventFeedback medias={eventInfo.Feedback_medias}/> )}\n    </div>\n  )\n}\n\nexport async function getServerSideProps() {\n  const fetchedContent = (await getEvents(`${place}/${theme}`)) || []\n  return {\n      props: { fetchedContent },\n  }\n}"]},"metadata":{},"sourceType":"module"}