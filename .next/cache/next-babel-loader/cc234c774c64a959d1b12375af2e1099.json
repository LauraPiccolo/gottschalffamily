{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories.js\";\nimport { useEffect, useState } from 'react';\nimport { getThemes, getEventList, getHome } from '../lib/api';\nimport ArchiveList from '../components/Archive/ArchiveList';\nimport ArchiveLocations from '../components/Archive/ArchiveLocations';\nimport locations from '../locations.js';\n\nconst Archive = ({\n  lang,\n  themes\n}) => {\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  });\n  const {\n    0: selectedLocation,\n    1: setSelectedLocation\n  } = useState(0);\n  const eventList = locations.map(location => {\n    themes.map(theme => {\n      console.log(theme); // theme.events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === location.name.toLowerCase()).map((event) => ({\n      //     theme: event.content.theme.name,\n      //     date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n      //     link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name.toLowerCase()}`,\n      //     thumbnail: event.content.thumbnail.filename\n      //   }))\n    });\n  });\n  console.log(eventList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"archive\",\n    children: [/*#__PURE__*/_jsxDEV(ArchiveLocations, {\n      locations: locations,\n      lang: lang,\n      selectedLocation: selectedLocation,\n      setSelectedLocation: setSelectedLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArchiveList, {\n      eventList: eventList[selectedLocation]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps({\n  preview = null\n}) {\n  const themes = (await getThemes(preview)) || [];\n  return {\n    props: {\n      themes\n    }\n  };\n}\nexport default Archive;","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/stories.js"],"names":["useEffect","useState","getThemes","getEventList","getHome","ArchiveList","ArchiveLocations","locations","Archive","lang","themes","document","querySelector","classList","remove","selectedLocation","setSelectedLocation","eventList","map","location","theme","console","log","getServerSideProps","preview","props"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,OAAlC,QAAiD,YAAjD;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAEpCV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,YAAjD;AACD,GAFQ,CAAT;AAIA,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0Cf,QAAQ,CAAC,CAAD,CAAxD;AAEA,QAAMgB,SAAS,GAAGV,SAAS,CAACW,GAAV,CAAeC,QAAD,IAAc;AAC5CT,IAAAA,MAAM,CAACQ,GAAP,CAAYE,KAAD,IAAW;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADoB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACC,KARD;AAQG,GATa,CAAlB;AAWEC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEF,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEV,SAA7B;AAAwC,MAAA,IAAI,EAAEE,IAA9C;AAAoD,MAAA,gBAAgB,EAAEM,gBAAtE;AAAwF,MAAA,mBAAmB,EAAEC;AAA7G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,SAAS,CAACF,gBAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;AA6BA,OAAO,eAAeQ,kBAAf,CAAkC;AAAEC,EAAAA,OAAO,GAAG;AAAZ,CAAlC,EAAsD;AAC3D,QAAMd,MAAM,GAAG,CAAC,MAAMR,SAAS,CAACsB,OAAD,CAAhB,KAA8B,EAA7C;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AAAEf,MAAAA;AAAF;AADJ,GAAP;AAGD;AAED,eAAeF,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { getThemes, getEventList, getHome } from '../lib/api'\n\nimport ArchiveList from '../components/Archive/ArchiveList'\nimport ArchiveLocations from '../components/Archive/ArchiveLocations'\nimport locations from '../locations.js';\n\nconst Archive = ({ lang, themes }) => {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  })\n\n  const [selectedLocation, setSelectedLocation] = useState(0)\n\n  const eventList = locations.map((location) => {\n    themes.map((theme) => {\n      console.log(theme);\n    // theme.events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === location.name.toLowerCase()).map((event) => ({\n    //     theme: event.content.theme.name,\n    //     date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n    //     link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name.toLowerCase()}`,\n    //     thumbnail: event.content.thumbnail.filename\n    //   }))\n    })});\n\n    console.log(eventList)\n  \n  return (\n    <div id=\"archive\">\n      <ArchiveLocations locations={locations} lang={lang} selectedLocation={selectedLocation} setSelectedLocation={setSelectedLocation}/>\n      <ArchiveList eventList={eventList[selectedLocation]}/>\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  return {\n      props: { themes },\n  }\n}\n\nexport default Archive\n"]},"metadata":{},"sourceType":"module"}