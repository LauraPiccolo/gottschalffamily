{"ast":null,"code":"import _toConsumableArray from \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getHome } from '../lib/api';\nimport ArchiveList from '../components/Archive/ArchiveList';\nimport ArchiveLocations from '../components/Archive/ArchiveLocations';\n\nvar Archive = function Archive(_ref) {\n  _s();\n\n  var lang = _ref.lang,\n      themes = _ref.themes,\n      events = _ref.events;\n  useEffect(function () {\n    document.querySelector('.menu').classList.remove('menu--open');\n  }); // const archivedThemes = themes.filter((theme) => theme.content.Timing[0] === \"archived\")\n\n  var archivedThemes = themes;\n  console.log(archivedThemes);\n  var newThemes = archivedThemes.map(function (theme) {\n    return {\n      title: [theme.content.Title],\n      events: _toConsumableArray(events.map(function (event) {\n        return {\n          city: event.full_slug.split('archived-events/').pop().split('/')[0],\n          date: event.content.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.'),\n          link: \"\".concat(event.full_slug.split('archived-events/').pop().split('/')[0], \"-\").concat(theme.content.title)\n        };\n      }))\n    };\n  }); // let cityList = [];\n  // events.forEach(element => {\n  //   let exists = false;\n  //   const thisCity = element.full_slug.split('archived-events/').pop().split('/')[0]\n  //   cityList.forEach((city) => {\n  //     if (city === thisCity) exists = true;\n  //   })\n  //   if(!exists) cityList.push(thisCity);\n  // });\n\n  var locations = {\n    cities: ['Berlin', 'Magdeburg', 'Düsseldorf', 'Dresden', 'Göttingen', 'Hamburg', 'Köln', 'Ruhrgebiet'],\n    regions: ['']\n  };\n  var newPlaces = cityList.map(function (city) {\n    return {\n      city: city,\n      events: events.filter(function (event) {\n        return event.full_slug.split('archived-events/').pop().split('/')[0] === city;\n      }).map(function (event) {\n        return {\n          theme: event.content.theme.name,\n          date: event.content.date.replace(' 00:00', '').replace(/-/g, '.').split('.').reverse().join('.'),\n          link: \"\".concat(event.full_slug.split('archived-events/').pop().split('/')[0], \"-\").concat(event.content.theme.name)\n        };\n      })\n    };\n  });\n  var archiveList = {\n    theme: _toConsumableArray(newThemes),\n    place: _toConsumableArray(newPlaces)\n  };\n\n  var _useState = useState('place'),\n      archiveMode = _useState[0],\n      setArchiveMode = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"archive\",\n    children: [/*#__PURE__*/_jsxDEV(ArchiveLocations, {\n      cityList: cityList,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ArchiveList, {\n      archiveMode: archiveMode,\n      archiveList: archiveList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Archive, \"p4HaKXzaBzPAlg+mwPvWg0RhCbk=\");\n\n_c = Archive;\nexport var __N_SSP = true;\nexport default Archive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js"],"names":["useEffect","useState","getHome","ArchiveList","ArchiveLocations","Archive","lang","themes","events","document","querySelector","classList","remove","archivedThemes","console","log","newThemes","map","theme","title","content","Title","event","city","full_slug","split","pop","date","replace","reverse","join","link","locations","cities","regions","newPlaces","cityList","filter","name","archiveList","place","archiveMode","setArchiveMode"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { getThemes, getEventList, getHome } from '../lib/api'\n\nimport ArchiveList from '../components/Archive/ArchiveList'\nimport ArchiveLocations from '../components/Archive/ArchiveLocations'\n\nconst Archive = ({ lang, themes, events }) => {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  })\n\n  // const archivedThemes = themes.filter((theme) => theme.content.Timing[0] === \"archived\")\n  const archivedThemes = themes;\n\n  console.log(archivedThemes);\n\n  const newThemes = archivedThemes.map((theme) => ({\n    title: [theme.content.Title],\n    events: [...events.map((event) => ({\n      city: event.full_slug.split('archived-events/').pop().split('/')[0],\n      date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n      link: `${event.full_slug.split('archived-events/').pop().split('/')[0]}-${theme.content.title}`\n    }))],\n  }))\n\n  // let cityList = [];\n  // events.forEach(element => {\n  //   let exists = false;\n  //   const thisCity = element.full_slug.split('archived-events/').pop().split('/')[0]\n  //   cityList.forEach((city) => {\n  //     if (city === thisCity) exists = true;\n  //   })\n  //   if(!exists) cityList.push(thisCity);\n  // });\n\n  const locations = {\n    cities: [\n      'Berlin', 'Magdeburg', 'Düsseldorf', 'Dresden', 'Göttingen', 'Hamburg', 'Köln', 'Ruhrgebiet'\n    ],\n    regions: [\n      ''\n    ]\n  }\n\n  const newPlaces = cityList.map((city) => ({\n    city: city,\n    events: events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === city).map((event) => ({\n      theme: event.content.theme.name,\n      date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n      link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name}`,\n    }))\n  }))\n\n  const archiveList = {\n    theme: [\n      ...newThemes\n    ],\n    place: [\n      ...newPlaces\n    ]\n  }\n\n  const [archiveMode, setArchiveMode] = useState('place');\n  \n  return (\n    <div id=\"archive\">\n      <ArchiveLocations cityList={cityList} lang={lang}/>\n      <ArchiveList archiveMode={archiveMode} archiveList={archiveList}/>\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  const events = (await getEventList(preview)) || []\n  return {\n      props: { themes, events },\n  }\n}\n\nexport default Archive\n"]},"metadata":{},"sourceType":"module"}