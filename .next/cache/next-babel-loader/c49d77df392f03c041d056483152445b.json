{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Archive/ArchiveToolBar/index.js\",\n    _this = this;\n\nvar ArchiveToolBar = function ArchiveToolBar(_ref) {\n  var setArchiveMode = _ref.setArchiveMode,\n      archiveMode = _ref.archiveMode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"archive__toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"archive__toolbar__button\".concat(archiveMode === 'place' ? ' archive__toolbar__button--selected' : ''),\n      onClick: function onClick() {\n        return setArchiveMode('place');\n      },\n      children: \"ORDER BY PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"archive__toolbar__button\".concat(archiveMode === 'theme' ? ' archive__toolbar__button--selected' : ''),\n      onClick: function onClick() {\n        return setArchiveMode('theme');\n      },\n      children: \"ORDER BY THEME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ArchiveToolBar;\nexport default ArchiveToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchiveToolBar\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2020/Storyfeld/Storyfeld Phase 2/components/Archive/ArchiveToolBar/index.js"],"names":["ArchiveToolBar","setArchiveMode","archiveMode"],"mappings":";;;;;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAAmC;AAAA,MAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;AAExD,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,oCAA6BA,WAAW,KAAK,OAAhB,GAA0B,qCAA1B,GAAgE,EAA7F,CAAjB;AAAoH,MAAA,OAAO,EAAE;AAAA,eAAMD,cAAc,CAAC,OAAD,CAApB;AAAA,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAQ,MAAA,SAAS,oCAA6BC,WAAW,KAAK,OAAhB,GAA0B,qCAA1B,GAAgE,EAA7F,CAAjB;AAAoH,MAAA,OAAO,EAAE;AAAA,eAAMD,cAAc,CAAC,OAAD,CAApB;AAAA,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CARD;;KAAMD,c;AAUN,eAAeA,cAAf","sourcesContent":["const ArchiveToolBar = ({setArchiveMode, archiveMode}) => {\n\n  return (\n    <div className=\"archive__toolbar\">\n      <button className={`archive__toolbar__button${archiveMode === 'place' ? ' archive__toolbar__button--selected':''}`} onClick={() => setArchiveMode('place')}>ORDER BY PLACE</button>\n      <button className={`archive__toolbar__button${archiveMode === 'theme' ? ' archive__toolbar__button--selected':''}`} onClick={() => setArchiveMode('theme')}>ORDER BY THEME</button>\n    </div>\n  )\n}\n\nexport default ArchiveToolBar\n"]},"metadata":{},"sourceType":"module"}