{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getHome } from '../lib/api';\nimport ArchiveList from '../components/Archive/ArchiveList';\nimport ArchiveLocations from '../components/Archive/ArchiveLocations';\nimport locationList from '../locations.js';\n\nvar Archive = function Archive(_ref) {\n  _s();\n\n  var lang = _ref.lang,\n      themes = _ref.themes,\n      events = _ref.events;\n  useEffect(function () {\n    document.querySelector('.menu').classList.remove('menu--open');\n  });\n  console.log(locationList);\n\n  var _useState = useState(0),\n      selectedLocation = _useState[0],\n      setSelectedLocation = _useState[1]; // const eventList = locationList.map((location) => ({\n  //   [location]: [\n  //     events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === city).map((event) => ({\n  //       theme: event.content.theme.name,\n  //       date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n  //       link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name}`,\n  //     }))\n  //   ]\n  // }))\n\n\n  console.log(eventList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"archive\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Archive, \"riO84UJAF9Zhn403l50PxLFnVF4=\");\n\n_c = Archive;\nexport var __N_SSP = true;\nexport default Archive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"sources":["/Users/laura/Documents/WORK/2021/Storyfeld/Storyfeld Phase 2/pages/archive.js"],"names":["useEffect","useState","getHome","ArchiveList","ArchiveLocations","locationList","Archive","lang","themes","events","document","querySelector","classList","remove","console","log","selectedLocation","setSelectedLocation","eventList"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAkCC,OAAlC,QAAiD,YAAjD;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA8B;AAAA;;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAE5CT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,YAAjD;AACD,GAFQ,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;;AAN4C,kBAQIJ,QAAQ,CAAC,CAAD,CARZ;AAAA,MAQrCe,gBARqC;AAAA,MAQnBC,mBARmB,iBAU5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CA5BD;;GAAMZ,O;;KAAAA,O;;AAsCN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { getThemes, getEventList, getHome } from '../lib/api'\n\nimport ArchiveList from '../components/Archive/ArchiveList'\nimport ArchiveLocations from '../components/Archive/ArchiveLocations'\nimport locationList from '../locations.js';\n\nconst Archive = ({ lang, themes, events }) => {\n\n  useEffect(() => {\n    document.querySelector('.menu').classList.remove('menu--open');\n  })\n\n  console.log(locationList);\n\n  const [selectedLocation, setSelectedLocation] = useState(0)\n\n  // const eventList = locationList.map((location) => ({\n  //   [location]: [\n  //     events.filter((event) => event.full_slug.split('archived-events/').pop().split('/')[0] === city).map((event) => ({\n  //       theme: event.content.theme.name,\n  //       date: event.content.date.replace(' 00:00','').replace(/-/g, '.').split('.').reverse().join('.'),\n  //       link:`${event.full_slug.split('archived-events/').pop().split('/')[0]}-${event.content.theme.name}`,\n  //     }))\n  //   ]\n  // }))\n\n  console.log(eventList);\n  \n  return (\n    <div id=\"archive\">\n      {/* <ArchiveLocations locations={locations} lang={lang} selectedLocation={selectedLocation} setSelectedLocation={setSelectedLocation}/> */}\n      {/* <ArchiveList selectedLocation={selectedLocation} eventList={eventList}/> */}\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ preview = null }) {\n  const themes = (await getThemes(preview)) || []\n  const events = (await getEventList(preview)) || []\n  return {\n      props: { themes, events },\n  }\n}\n\nexport default Archive\n"]},"metadata":{},"sourceType":"module"}